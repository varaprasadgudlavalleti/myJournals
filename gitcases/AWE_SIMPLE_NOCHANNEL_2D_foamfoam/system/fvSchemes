/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         backward;
}

gradSchemes
{
    default         Gauss linear;
    grad(U)	 	Gauss linear;
    grad(phi)	 	Gauss linear;
    grad(Ue)		Gauss linear;
}

divSchemes
{
    div(rhoPhi,U)       Gauss linearUpwind default;
    div(rhoalpha2*Uc,C2[i])	Gauss linearUpwind default;
    //div(((interpolate(alpha.electrolyte)*(phi+interpolate(Ucm)))*MW_H2),C_H2.electrolyte)	Gauss linearUpwind default;
    //div(((interpolate(alpha.electrolyte)*(phi+interpolate(Ucm)))*MW_O2),C_O2.electrolyte)	Gauss linearUpwind default;
    //div(((interpolate(alpha.electrolyte)*(phi+interpolate(Ucm)))*MW_H2O),C_H2O.electrolyte)	Gauss linearUpwind default;
    //div(((interpolate(alpha.electrolyte)*(phi+interpolate(Ucm)))*MW_OH),C_OH.electrolyte)	Gauss linearUpwind default;
    div(const*snGrad(Ue),C2[i])	Gauss upwind;
    div(const*snGrad(alpha2),C2[i])	Gauss upwind;
    "div\(alphaPhi,C.*\)"	bounded Gauss linearUpwind grad(U);
    "div\(phi,alpha.*\)" Gauss linear;
    "div\(phirb,alpha.*\)" Gauss linear;
    "div\(U.*\)"	Gauss linearUpwind default;
    "div(rhod*Udm,alphad)"	Gauss linearUpwind default;
    "div(rhod*U,alphad)"	Gauss linearUpwind default;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
    div(tauDm)          Gauss linear;
    div(U,alphad)		Gauss upwind;
}

laplacianSchemes
{
    default         Gauss linear corrected;
    laplacian(diffusivity,cellDisplacement) Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         orthogonal;
}

// ************************************************************************* //
